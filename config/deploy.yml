# Name of your application. Used to uniquely configure containers.
service: baheth_ss

# Name of the container image.
image: ieasybooks/baheth_ss

# Deploy to these servers.
servers:
  web:
    hosts:
      - 45.94.209.104
    options:
      cpus: 2.0
      memory: 5g
    labels:
      traefik.http.routers.baheth_ss-web.rule: 'Host(`ss.ieasybooks.com`)'
      traefik.http.routers.baheth_ss-web.tls: true
      traefik.http.routers.baheth_ss-web.tls.certresolver: letsencrypt

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: ieasybooks

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
env:
#   clear:
#     DB_HOST: 192.168.0.2
  secret:
    - USE_ONNX_RUNTIME
    - HF_ACCESS_TOKEN
    - HF_MODEL_ID
    - HADITHS_DATA_FILE_PATH
    - HADITHS_DATA_FILE_URL

# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
builder:
  multiarch: false
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql.erb:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
traefik:
  host_port: 8080
  options:
    publish:
      - "8443:8443"
    volume:
      - "/etc/traefik/acme/:/etc/traefik/acme/"
  args:
    accesslog.format: common
    entryPoints.web.address: ":8080"
    entryPoints.websecure.address: ":8443"
    certificatesResolvers.letsencrypt.acme.email: "easybooksdev@gmail.com"
    certificatesResolvers.letsencrypt.acme.storage: "/etc/traefik/acme/letsencrypt.json"
    certificatesResolvers.letsencrypt.acme.tlschallenge: true
    certificatesResolvers.letsencrypt.acme.caServer: https://acme-v02.api.letsencrypt.org/directory
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
healthcheck:
  path: /are_you_healthy
  port: 8383
  max_attempts: 25
